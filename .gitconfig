[user]
	name = Debajit Adhikary
	email = [ENTER EMAIL ADDRESS HERE]
	
[alias]

	# Status
	s = status

	# Add
	a = !sh -c 'git stage -u :/ && git s'

	# Aliases
	alias = !sh -c 'git config "alias.$1"' -
	al = !sh -c 'git config "alias.$1"' -

	# Amend (long wordy alias, to prevent unnecessary reflog resets after an erroneous amend)
	amend = commit --amend --no-edit
	amendf = commit --amend -F
	
	# Grep
	g = grep --ignore-case
	gfunc = grep --ignore-case --function-context -e
	gword = grep --ignore-case --word-regexp
	gstr = grep --ignore-case -F
	todo = grep -i -e todo -e fixme

	# Diff
	d = diff --color-words
	ds = !sh -c 'git d --staged' -
	dh = !sh -c 'git d head' -
	dh1 = !sh -c 'git d head~1' -
	dh2 = !sh -c 'git d head~2' -
	dp = !sh -c 'git d "$1~1" "$1"' -
	dfunc = diff --color-words -W
	dw = diff --color-words -W

	# Difftool aliases
	dt = difftool
	dts = difftool --staged
	dth = difftool head
	dth1 = difftool head~1
	dth2 = difftool head~2
	dtp = !sh -c 'git difftool "$1~1" "$1"' -
	
	# Find file
	findfile = ls-files
	f = ls-files
	
	# Branch
	b = branch
	ba = branch -a
	bd = branch -d
	bm = branch --move
	bv = branch -vv
	
	# Checkout
	c = checkout
	cb = checkout -b
	
	# Commit
	ci = commit
	cif = commit -F
	cim = commit -m

	cp = cherry-pick
	cv = cherry -v
		
	# Merge
	m = merge
	mff = merge --ff-only
	mt = mergetool
    mo = merge -s ours
	
	# Rebase
	r = rebase
	rc = rebase --continue
	ri = rebase -i
	
	# Tagging
	t = tag
	
	# Incoming / Outgoing (Compares with upstream)
	incoming = log ..@{u} --name-status
	in = log ..@{u} --name-status
	outgoing = log @{u}.. --name-status
	out = log @{u}.. --name-status
	outp = log @{u}.. -p
	
	# Log	
	tip = log --name-status -1
	l = log --graph --pretty=format:'%C(bold magenta)%h%Creset %C(bold yellow)%d%C(reset) %s %C(bold green)(%cr) %C(bold cyan)<%an>%Creset'
	ll = log --name-status
	la = !sh -c 'git ll -i --author=$1' -
	grep-commit-pattern = !sh -c 'git ll -i --grep=$1' -
	lg = !sh -c 'git ll -i --grep=$1' -
	grep-commit-string = !sh -c 'git ll -i -F --grep=\"$1\"' -
	lgs = !sh -c 'git ll -i -F --grep=\"$1\"' -
	lag = !sh -c 'git ll -i --author=$1 --grep=$2' -
	lags = !sh -c 'git ll -i --author=$1 -F --grep=\"$2\"' -

	# Update branch aliases (project-specific)
	ub = !sh -c 'git fetch origin && git b -f master origin/master && git r master'
	ubt = !sh -c 'git fetch origin && git b -f master $1 && git r master' -
	um = !sh -c 'git fetch origin && git r origin/master'
	umt = !sh -c 'git fetch origin && git r $1' -
	
[color]
	ui = auto
	
[color "branch"]
	current = bold cyan
	local = normal
	remote = bold red
	
[color "diff"]
	meta = cyan bold reverse
	frag = magenta bold
	old = red bold
	new = green bold
	whitespace = white reverse
	
[color "status"]
	added = bold red
	updated = bold green
	changed = bold red
	untracked = yellow
	nobranch = bold red
	
[column]
	branch = column
	status = column
	tag = column
	
[core]
	excludesfile = ~/.gitignore_global
	
[difftool]
	prompt = false
	
[difftool "Kaleidoscope"]
	cmd = ksdiff --partial-changeset --relative-path \"$MERGED\" -- \"$LOCAL\" \"$REMOTE\"
	
[diff]
	tool = Kaleidoscope
	
[grep]
	lineNumber = true
	
[log]
	abbrevCommit = true
	date = relative
	decorate = full
	
[mergetool "Kaleidoscope"]
	cmd = ksdiff --merge --output \"$MERGED\" --base \"$BASE\" -- \"$LOCAL\" --snapshot \"$REMOTE\" --snapshot
	trustExitCode = true
	
[mergetool]
	prompt = false
	
[merge]
	tool = Kaleidoscope

[pager]
	status = true
	
[push]
	default = simple
