#
# .gitconfig
#
# Place this in ~/.gitconfig or %userprofile%\.gitconfig
#


[user]
    name = Debajit Adhikary
    email = [ENTER EMAIL ADDRESS HERE]
    
[alias]

    ## Status
    s = status


    ## Staging

    # Staging: Stage all tracked files and display status
    a = !sh -c 'git stage -u :/ && git s'


    ## Amend 
    ## (long wordy aliases, to prevent unnecessary reflog resets after an erroneous amend)
	
    # Amend the current commit with staged changes
    # without editing the commit message
    amend = commit --amend --no-edit
	
    # Amend with file: Amend the current commit 
    # with staged changes, taking the commit message
    # from the given file
    amendf = commit --amend -F

    
    ## Branch
    b = branch
    bb = branch -vv
    ba = branch -avv
    bd = branch -d
    bm = branch --move

    
    ## Checkout
    c = checkout
    cb = checkout -b

    
    ## Commit
    ci = commit
    cif = commit -F
    cim = commit -m


    ## Cherry
    cv = cherry -v


    ## Cherry-Pick
    cp = cherry-pick

        
    ## Diff
    d = diff --color-words
    ds = diff --staged --color-words
    dh = diff HEAD
    dh1 = diff HEAD~1
    dh2 = git diff HEAD~2
    dprev = !sh -c 'git d "$1~1" "$1"' -
    dfunc = diff --color-words -W

    ## Diff context
    dd = diff --color-words -U10
    ddd = diff --color-words -U20

    ## Difftool aliases
    dt = difftool
    dts = difftool --staged
    dth = difftool HEAD
    dth1 = difftool HEAD~1
    dth2 = difftool HEAD~2
    see = !sh -c 'git difftool -d "$1^!"' -


    ## Find file
    findfile = ls-files
    f = ls-files


    ## Gitk
    k = !gitk -1


    ## Grep
    todo = grep -e TODO -e FIXME                        # Grep TODO and FIXME
    g = grep --ignore-case -e                           # General grep (case-insensitive)
    gf = grep --ignore-case --function-context -e       # Grep function
    gw = grep --ignore-case --word-regexp -e            # Grep word
    gs = grep --ignore-case -F -e                       # Grep string

    ## Grep context
    gg = grep --ignore-case -C6 -e                      # Grep with larger context
    ggg = grep --ignore-case -C12 -e                    # Grep with still larger context


    ## Log   

    # Tip of current branch
    tip = log --name-status -1
    tipdiff = show HEAD
	
    # Short log: Handy one-line-per-commit log
    l = log --graph --format='format:%C(yellow)"%h"%C(reset)  "%s" %C(auto)"%d"%C(reset) %C(magenta)"%ar"%C(reset)  %C(blue)"%an"%C(reset)' --date-order
    q = !sh -c 'git l -10'

    # Long log
    ll = log --name-status
    
    # Log with diff
    lp = log -p
	
    ## Searching with git log
    trace = log --name-status -i -S                                      # git log pickaxe. See when a string was added or removed in the code or a commit message.
    tracediff = log -p -i -S                                             # git log pickaxe and show changes. To visually examine a commit use "git see commit"
    messages = !sh -c 'git log --name-status -i --grep=$1' -             # git log for pattern in commit message
    messagestring = !sh -c 'git log --name-status -i -F --grep=\"$1\"' - # git log for string in commit message

	## Incoming / Outgoing changes (Compares with upstream)
	outgoing = log @{u}.. --name-status     # See outgoing changes using git log
	out = !sh -c 'git l @{u}..'             # See outgoing changes, one change per line
	incoming = log ..@{u} --name-status     # See incoming changes using git log
	in = !sh -c 'git l ..@{u}'              # See incoming changes, one change per line
	outdiff = log @{u}.. -p                 # Diffs the outgoing changes with upstream
	outdifftool = difftool @{u}             # See outgoing changes using difftool. TODO: Use gitk for non-Kaleidoscope-like difftools?

    ## Log by Author

    #
    # Show all commits by this author
    # git author <username>
    #
    # Show all commits by the author having the given
    # regex in the commit message:
    #   git author <username> <regex>
    #
    author = !sh -c 'git ll -i --author=$1 --grep=$2' -
    
    # Author grep fixed string: Show all commits by a particular
    # user matching the given fixed string in the commit log
    authorstr = !sh -c 'git ll -i --author=$1 -F --grep=\"$2\"' -
    
    # Commits by me
    # Usage: 
    #   git me
    #   git me <pattern>
    me = !sh -c 'git author debajit "$1"' -


    ## Merge
    m = merge
    mff = merge --ff-only
    mt = mergetool
    mo = merge -s ours

    
    ## Pull
    up = pull --rebase


    ## Rebase
    r = rebase
    rc = rebase --continue
    ri = rebase -i

    ## Shortlog
    contributors = shortlog -s
    contributors-by-commits = shortlog -sn
    
    ## Age of repository
    age = log --reverse --date=relative

    ## Tag
    t = tag
    tl = tag -l
    tt = tag -n10
    tags = tag -n10
	
    ## Optimization
    optimize = gc --aggressive
	
    ## External tool-specific shortcuts
    
        # Rails
        assetconfig = grep -e config --and -e asset
        assethelpers = grep -e image_tag --or -e image_path --or -e asset_tag --or -e asset_path --or -e 'image-url' --or -e 'image-path' --or -e 'asset-url' --or -e 'asset-path'

	
[color]
    ui = auto
    
[color "branch"]
    current = bold cyan
    local = normal
    remote = bold red
    upstream = bold green
    
[color "diff"]
    meta = cyan bold reverse
    frag = magenta bold
    old = red bold
    new = green bold
    whitespace = white reverse
    
[color "status"]
    added = bold red
    updated = bold green
    changed = bold red
    untracked = bold red
    nobranch = bold red
    
[column]
    branch = column
    status = column
    tag = column
    
[core]
    attributesfile = ~/.gitattributes_global
    excludesfile = ~/.gitignore_global
    
[credential]
    helper = osxkeychain

[difftool]
    prompt = false
    
[difftool "Kaleidoscope"]
    cmd = ksdiff --partial-changeset --relative-path \"$MERGED\" -- \"$LOCAL\" \"$REMOTE\"
    
[diff]
    tool = Kaleidoscope
    
[grep]
    lineNumber = true
    
[help]
    autocorrect = 1

[log]
    abbrevCommit = true
    date = relative
    decorate = full
    
[mergetool "Kaleidoscope"]
    cmd = ksdiff --merge --output \"$MERGED\" --base \"$BASE\" -- \"$LOCAL\" --snapshot \"$REMOTE\" --snapshot
    trustExitCode = true
    
[mergetool]
    prompt = false
    
[merge]
    tool = Kaleidoscope

[pager]
    status = true
    
[push]
    default = simple
